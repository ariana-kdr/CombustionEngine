clear variables;
data1 = readtable('AnaMeDa_2022_group03.xlsx');
%% EDA - Statistics

x = data1.Dissolution;

length_x = length(x); 
min_x = min(x);
max_x = max(x);
range_x = range(x);
mean_x = mean(x);
median_x = median(x);
std_x = std(x);
var_x = var(x);
iqr_x = iqr(x);
%% EDA - Visualisation

% Time sequence plot
figure 
hold on
title('Time sequence plot')
xlabel('Index');
ylabel('Dissolution'); 
grid on;
plot(x,'.')
hold off

% Histogram (not super useful)
figure
hold on
title('Histogram')
xlabel('Dissolution');
ylabel('Frequency'); 
grid on;
histogram(x)
hold off

% Density trace - different graphs obtained for different
% bandwidths, so first verify that experimental data is correct
figure
hold on
title('Density trace')
xlabel('Dissolution');
ylabel('Density'); 
grid on;
ksdensity(x)
hold off

% Boxplot
figure
hold on
title('Boxplot')
xlabel('Dissolution');
ylim([63 82]);
grid on;
boxplot(x)
hold off

% density trace shows graph similar to normal distribution 
% when no bandwidth set

% boxplot shows fairly symmetric distrubtion excluding a few
% outliers
%% Probability Distribution (68%)

% 68%-confidence interval
Smean_x = std_x / (sqrt(length_x));

%Computing Y (the dissolution ratio)
y = x ./ (100-x);
length_y = length(y);
mean_y = mean(y);
std_y = std(y);

%Method 1 for 68%
Smean_y = std_y / (sqrt(length_y));

%Method 2 for 68%
y_bar = mean_x ./ (100-mean_x);
partial_yxmean = (100)/(100-mean_x)^2;
Smean_y2 = (partial_yxmean * Smean_x);
%% Task 2
% EDA Task 2

Force = data1.Force;
CoatingViscosity = data1.CoatingViscosity;
TempInlet = data1.TempInlet;
TempExhaust = data1.TempExhaust;
SprayRate = data1.SprayRate;
Dissolution = data1.Dissolution;

corrF = corr([Force,Dissolution]); %No option
corrV = corr([CoatingViscosity,Dissolution]); %Not terrible
corrTi = corr([TempInlet,Dissolution]); %No option at all
corrTe = corr([TempExhaust,Dissolution]); %No option
corrS = corr([SprayRate,Dissolution]); %Best correlation

figure
hold on
scatter(SprayRate,Dissolution);
ylabel({'Dissolution fraction'});
xlabel({'Spray rate'});
title({'Scatter plot'});
hold off

figure
hold on
scatter(CoatingViscosity,Dissolution);
ylabel({'Dissolution fraction'});
xlabel({'Coating viscosity'});
title({'Scatter plot'});
hold off

% Mean standard error for spray rate
Smean_spray = std(SprayRate) ./ sqrt(length_x);
%% Linear regression model

LinRegModel1=fitlm(SprayRate,Dissolution)

% 95% confidence interval - does not contain value 0
% therefore model params are important 
conf_int1 = coefCI(LinRegModel1);

% Regression model plot
figure
hold on
plot(LinRegModel1);
ylabel({'Dissolution fraction'});
xlabel({'Spray rate'});
title({'Fit'});
grid on;
hold off

% Residuals plot
figure
hold on
plotResiduals(LinRegModel1,'fitted')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Residuals versus Fitted Values'});
grid on;
hold off

% Studentised residuals plot
figure
hold on
plotResiduals(LinRegModel1,'fitted', 'ResidualType','Studentized')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Studentized Residuals versus Fitted Values'});
grid on;
hold off



% this also validated by the fact that both the (absolute) values of the 
% numbers in the tstat column are greater than 2
%% Quadratic Regression Model

data2 = table(SprayRate,Dissolution);
QuadRegModel1 = fitlm(data2,'Dissolution~SprayRate+SprayRate^2');

% Regression model plot
figure
hold on
plot(QuadRegModel1);
ylabel({'Dissolution fraction'});
xlabel({'Spray rate'});
title({'Fit'});
grid on;
hold off

% Residuals plot
figure
hold on
plotResiduals(QuadRegModel1,'fitted')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Residuals versus Fitted Values'});
grid on;
hold off

% Studentised residuals plot
figure
hold on
plotResiduals(QuadRegModel1,'fitted', 'ResidualType','Studentized')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Studentized Residuals versus Fitted Values'});
grid on;
hold off
%% Task 3
% EDA task 3

% Finding the correlations between all of the different process variables
corrAll = corr([Force,CoatingViscosity,TempInlet,TempExhaust,SprayRate,Dissolution]);
% spray rate and dissolution still show the strongest correlation

% force: strongest correlation with dissolution; weakest with spray rate
% coating viscosity: strong - dissolution; weak - spray rate
% temp inlet: strong - force; weak - spray rate
% temp exhaust: strong - dissolution; weak - coating viscosity
% spray rate: strong - dissolution; weak - coating viscosity
% dissolution: strong - spray rate; weak - temp inlet
%% Linear Regression Model for all variables

data3 = table(Force,CoatingViscosity,TempInlet,TempExhaust,SprayRate,Dissolution);

LinRegModel2 = fitlm(data3,['Dissolution~Force+CoatingViscosity+TempInlet' ...
    '+TempExhaust+SprayRate'])

% tstat has values > 2 only for Coating Viscosity and Spray Rate

% 95% confidence interval
conf_int2 = coefCI(LinRegModel2)
%% Residuals plots

% Normal probability of residuals plot
figure
hold on
plotResiduals(LinRegModel2,'probability')
xlabel({'Residuals'});
ylabel({'Probability'});
title({'Normal Probability Plot of Residuals'});
grid on;
hold off

% Studentised residuals plot
figure
hold on
plotResiduals(LinRegModel2,'fitted', 'ResidualType','Studentized')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Studentized Residuals versus Fitted Values'});
grid on;
hold off
%% Linear Regression Model for coating viscosity, spray rate and dissolution

LinRegModel3 = fitlm(data3,['Dissolution~CoatingViscosity+SprayRate'])

% no zeroes
conf_int3 = coefCI(LinRegModel3)

% Normal probability of residuals plot

figure
hold on
plotResiduals(LinRegModel3,'probability')
xlabel({'Residuals'});
ylabel({'Probability'});
title({'Normal Probability Plot of Residuals'});
grid on;
hold off

% Studentised residuals plot
figure
hold on
plotResiduals(LinRegModel3,'fitted', 'ResidualType','Studentized')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Studentized Residuals versus Fitted Values'});
grid on;
hold off
%% Linear Regression Model for coating viscosity, spray rate and dissolution

... with interaction

LinRegModel4 = fitlm(data3,['Dissolution~CoatingViscosity*SprayRate'])

% no zeroes
conf_int4 = coefCI(LinRegModel4)

% Normal probability of residuals plot

figure
hold on
plotResiduals(LinRegModel4,'probability')
xlabel({'Residuals'});
ylabel({'Probability'});
title({'Normal Probability Plot of Residuals'});
grid on;
hold off

% Studentised residuals plot
figure
hold on
plotResiduals(LinRegModel4,'fitted', 'ResidualType','Studentized')
xlabel({'Fitted Values'});
ylabel({'Residuals'});
title({'Studentized Residuals versus Fitted Values'});
grid on;
hold off
